// <auto-generated />
using ICA_DataAccessLayer.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ICA_DataAccessLayer.Migrations
{
    [DbContext(typeof(InfusionPlanDbContext))]
    partial class InfusionPlanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DTO_Library.DTO_InfusionPlan", b =>
                {
                    b.Property<long>("CPR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Concentration")
                        .HasColumnType("REAL");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL");

                    b.Property<int>("Fulltime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntervalTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxDoseage")
                        .HasColumnType("REAL");

                    b.Property<string>("MedicineName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("CPR");

                    b.ToTable("InfusionPlans");
                });

            modelBuilder.Entity("DTO_Library.DTO_TimeFlowList", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DtoInfusionPlanCpr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id", "DtoInfusionPlanCpr");

                    b.HasIndex("DtoInfusionPlanCpr");

                    b.ToTable("TimeFlowLists");
                });

            modelBuilder.Entity("DTO_Library.DTO_TimeFlowListItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DtoTimeFlowListId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DtoTimeFlowListDtoInfusionPlanCpr")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TimeFlowListItemType")
                        .HasColumnType("REAL");

                    b.HasKey("Id", "DtoTimeFlowListId", "DtoTimeFlowListDtoInfusionPlanCpr");

                    b.HasIndex("DtoTimeFlowListId", "DtoTimeFlowListDtoInfusionPlanCpr");

                    b.ToTable("TimeFlowListItems");
                });

            modelBuilder.Entity("DTO_Library.DTO_TimeFlowList", b =>
                {
                    b.HasOne("DTO_Library.DTO_InfusionPlan", "DtoInfusionPlan")
                        .WithMany("TimeFlowLists")
                        .HasForeignKey("DtoInfusionPlanCpr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DtoInfusionPlan");
                });

            modelBuilder.Entity("DTO_Library.DTO_TimeFlowListItem", b =>
                {
                    b.HasOne("DTO_Library.DTO_TimeFlowList", "DtoTimeFlowList")
                        .WithMany("TimeFlowListItems")
                        .HasForeignKey("DtoTimeFlowListId", "DtoTimeFlowListDtoInfusionPlanCpr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DtoTimeFlowList");
                });

            modelBuilder.Entity("DTO_Library.DTO_InfusionPlan", b =>
                {
                    b.Navigation("TimeFlowLists");
                });

            modelBuilder.Entity("DTO_Library.DTO_TimeFlowList", b =>
                {
                    b.Navigation("TimeFlowListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
